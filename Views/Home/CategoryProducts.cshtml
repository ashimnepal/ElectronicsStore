@model IEnumerable<ElectronicsStore.Models.Product>

@{
    ViewData["Title"] = ViewData["CategoryName"] + " Products";
    var categoryName = ViewData["CategoryName"] as string;
    var categoryId = (int)ViewData["CategoryId"];
}

<div class="container py-5">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">@categoryName</li>
        </ol>
    </nav>

    <div class="row mb-4">
        <div class="col-md-6">
            <h1 class="mb-0">@categoryName</h1>
        </div>
        <div class="col-md-6 text-end">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    Sort by
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a class="dropdown-item sort-link" href="#" data-sort="name-asc">Name (A-Z)</a></li>
                    <li><a class="dropdown-item sort-link" href="#" data-sort="name-desc">Name (Z-A)</a></li>
                    <li><a class="dropdown-item sort-link" href="#" data-sort="price-asc">Price (Low to High)</a></li>
                    <li><a class="dropdown-item sort-link" href="#" data-sort="price-desc">Price (High to Low)</a></li>
                </ul>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            <i class="fas fa-info-circle me-2"></i> No products available in this category.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4 product-grid">
            @foreach (var product in Model)
            {
                <div class="col product-item" data-name="@product.Name" data-price="@product.Price">
                    <div class="card h-100 product-card shadow-sm">
                        <div class="card-img-top-container">
                            <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name"
                                 onerror="this.onerror=null; this.src='/images/products/default-product.jpg';">
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="badge bg-info">@product.Category?.Name</span>
                                @if (product.StockQuantity > 0 && product.IsAvailable)
                                {
                                    <span class="badge bg-success">In Stock</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Out of Stock</span>
                                }
                            </div>
                            <p class="card-text product-description">@(product.Description?.Length > 100 ? product.Description?.Substring(0, 97) + "..." : product.Description)</p>
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <h5 class="text-primary mb-0">@product.Price.ToString("C")</h5>
                                <div class="btn-group">
                                    <a asp-controller="Home" asp-action="ProductDetails" asp-route-id="@product.Id"
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-eye me-1"></i> View
                                    </a>
                                    <button class="btn btn-sm btn-primary add-to-cart" data-id="@product.Id">
                                        <i class="fas fa-cart-plus me-1"></i> Add
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .product-card {
            transition: transform 0.3s;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
        }
        
        .card-img-top-container {
            height: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            padding: 15px;
        }
        
        .card-img-top {
            max-height: 100%;
            object-fit: contain;
        }
        
        .product-description {
            height: 50px;
            overflow: hidden;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add to cart functionality
            $('.add-to-cart').click(function(e) {
                e.preventDefault();
                const productId = $(this).data('id');
                
                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    data: { productId: productId, quantity: 1 },
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update cart count in navbar
                            $('.cart-count').text(response.cartCount);
                            
                            // Show success message
                            showNotification('Success', 'Product added to cart!', 'success');
                        } else {
                            showNotification('Error', response.message, 'danger');
                        }
                    },
                    error: function() {
                        showNotification('Error', 'Failed to add product to cart.', 'danger');
                    }
                });
            });
            
            // Sorting functionality
            $('.sort-link').click(function(e) {
                e.preventDefault();
                const sortOption = $(this).data('sort');
                const productGrid = $('.product-grid');
                const products = productGrid.children('.product-item').get();
                
                products.sort(function(a, b) {
                    const aVal = $(a).data(sortOption.split('-')[0]);
                    const bVal = $(b).data(sortOption.split('-')[0]);
                    
                    if (sortOption.includes('-asc')) {
                        return aVal > bVal ? 1 : -1;
                    } else {
                        return aVal < bVal ? 1 : -1;
                    }
                });
                
                $.each(products, function(index, item) {
                    productGrid.append(item);
                });
            });
            
            // Toast notification function
            function showNotification(title, message, type) {
                const toastHtml = `
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                <strong>${title}:</strong> ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;
                
                const toastContainer = $('.toast-container');
                if (toastContainer.length === 0) {
                    $('body').append('<div class="toast-container position-fixed top-0 end-0 p-3"></div>');
                }
                
                $('.toast-container').append(toastHtml);
                const toast = new bootstrap.Toast($('.toast').last(), { delay: 3000 });
                toast.show();
            }
        });
    </script>
} 