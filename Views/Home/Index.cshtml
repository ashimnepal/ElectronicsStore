@model IEnumerable<ElectronicsStore.Models.Product>

@{
    ViewData["Title"] = "Home Page";
}

<!-- Hero Section -->
<div class="hero-section bg-light py-5 mb-4">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1 class="display-4 fw-bold">Welcome to Electronics Store</h1>
                <p class="lead">Discover the latest electronics and gadgets at competitive prices.</p>
                <a href="#featured-products" class="btn btn-primary btn-lg">Shop Now</a>
            </div>
            <div class="col-md-6 d-none d-md-block">
                <img src=https://img.freepik.com/premium-psd/smart-mobile-promotional-banner-design-template_987701-2646.jpg alt="Electronics" class="img-fluid rounded shadow" 
                    onerror="this.onerror=null; this.src='/images/products/default-product.jpg';">
            </div>
        </div>
    </div>
</div>

<!-- Featured Products Section -->
<section id="featured-products" class="py-5">
    <div class="container">
        <h2 class="text-center mb-4">Featured Products</h2>
        
        @if (!Model.Any())
        {
            <div class="alert alert-info text-center">
                <i class="fas fa-info-circle me-2"></i> No products available at the moment.
            </div>
        }
        else
        {
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
                @foreach (var product in Model)
                {
                    <div class="col">
                        <div class="card h-100 product-card shadow-sm">
                            <div class="card-img-top-container">
                                <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name"
                                    onerror="this.onerror=null; this.src='/images/products/default-product.jpg';">
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span class="badge bg-info">@product.Category?.Name</span>
                                    @if (product.StockQuantity > 0)
                                    {
                                        <span class="badge bg-success">In Stock</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Out of Stock</span>
                                    }
                                </div>
                                <p class="card-text product-description">@(product.Description?.Length > 100 ? product.Description?.Substring(0, 97) + "..." : product.Description)</p>
                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <h5 class="text-primary mb-0">@product.Price.ToString("C")</h5>
                                    <div class="btn-group">
                                        <a asp-controller="Home" asp-action="ProductDetails" asp-route-id="@product.Id" 
                                            class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye me-1"></i> View
                                        </a>
                                        <button class="btn btn-sm btn-primary add-to-cart" data-id="@product.Id">
                                            <i class="fas fa-cart-plus me-1"></i> Add
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</section>

<!-- Categories Section -->
<section class="bg-light py-5">
    <div class="container">
        <h2 class="text-center mb-4">Shop by Category</h2>
        <div class="row justify-content-center">
            <div class="col-md-10">
                <div class="row row-cols-2 row-cols-md-3 g-4 text-center">
                    @{
                        var allCategories = ViewBag.AllCategories as List<ElectronicsStore.Models.Category> ?? new List<ElectronicsStore.Models.Category>();
                        var displayCategories = allCategories.Take(6).ToList();
                        
                        // If we have fewer than 6 categories, fill with duplicates
                        if (displayCategories.Count < 6 && displayCategories.Any())
                        {
                            var needed = 6 - displayCategories.Count;
                            for (int i = 0; i < needed; i++)
                            {
                                displayCategories.Add(displayCategories[i % displayCategories.Count]);
                            }
                        }
                        
                        var categoryEndpoint = "/Home/CategoryProducts?categoryId=";
                        var icons = new[] { "fa-laptop", "fa-mobile-alt", "fa-headphones", "fa-camera", "fa-tv", "fa-gamepad" };
                    }
                    
                    @for (int i = 0; i < Math.Min(displayCategories.Count, 6); i++)
                    {
                        var category = displayCategories[i];
                        var iconClass = icons[i];
                        
                        <div class="col">
                            <a href="@(categoryEndpoint + category.Id)" class="text-decoration-none">
                                <div class="card h-100 border-0 shadow-sm category-card">
                                    <div class="card-body">
                                        <i class="fas @iconClass fs-1 mb-3 text-primary"></i>
                                        <h5>@category.Name</h5>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Styles {
    <style>
        .product-card {
            transition: transform 0.3s;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
        }
        
        .card-img-top-container {
            height: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            padding: 15px;
        }
        
        .card-img-top {
            max-height: 100%;
            object-fit: contain;
        }
        
        .product-description {
            height: 50px;
            overflow: hidden;
        }
        
        .category-card {
            transition: all 0.3s;
        }
        
        .category-card:hover {
            background-color: #f8f9fa;
            transform: translateY(-5px);
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.add-to-cart').click(function(e) {
                e.preventDefault();
                const productId = $(this).data('id');
                
                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    data: { productId: productId, quantity: 1 },
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update cart count in navbar
                            $('.cart-count').text(response.cartCount);
                            
                            // Show success message
                            showNotification('Success', 'Product added to cart!', 'success');
                        } else {
                            showNotification('Error', response.message, 'danger');
                        }
                    },
                    error: function() {
                        showNotification('Error', 'Failed to add product to cart.', 'danger');
                    }
                });
            });
            
            // Toast notification function
            function showNotification(title, message, type) {
                const toastHtml = `
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                <strong>${title}:</strong> ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;
                
                const toastContainer = $('.toast-container');
                if (toastContainer.length === 0) {
                    $('body').append('<div class="toast-container position-fixed top-0 end-0 p-3"></div>');
                }
                
                $('.toast-container').append(toastHtml);
                const toast = new bootstrap.Toast($('.toast').last(), { delay: 3000 });
                toast.show();
            }
        });
    </script>
}
